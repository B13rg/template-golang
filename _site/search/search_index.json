{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"README-repo/","text":"template-golang A template repo for a Golang Project. Table of Contents - [template-golang](#template-golang) - [Key Features](#key-features) - [Technical Overview](#technical-overview) - [Installation](#installation) - [Getting Started](#getting-started) - [Configuration](#configuration) - [Deployment](#deployment) - [Documentation and Additional Resources](#documentation-and-additional-resources) - [Links](#links) - [Other Docs](#other-docs) - [History](#history) - [Alternatives](#alternatives) - [Development](#development) - [Setup](#setup) - [Tests](#tests) - [Build Troubleshooting](#build-troubleshooting) - [Contributing](#contributing) - [License](#license) Key Features Technical Overview Installation Getting Started Configuration Deployment Documentation and Additional Resources Links Other Docs History Alternatives Development Setup Tests Build Troubleshooting Contributing License","title":"Repo Readme"},{"location":"README-repo/#template-golang","text":"A template repo for a Golang Project. Table of Contents - [template-golang](#template-golang) - [Key Features](#key-features) - [Technical Overview](#technical-overview) - [Installation](#installation) - [Getting Started](#getting-started) - [Configuration](#configuration) - [Deployment](#deployment) - [Documentation and Additional Resources](#documentation-and-additional-resources) - [Links](#links) - [Other Docs](#other-docs) - [History](#history) - [Alternatives](#alternatives) - [Development](#development) - [Setup](#setup) - [Tests](#tests) - [Build Troubleshooting](#build-troubleshooting) - [Contributing](#contributing) - [License](#license)","title":"template-golang"},{"location":"README-repo/#key-features","text":"","title":"Key Features"},{"location":"README-repo/#technical-overview","text":"","title":"Technical Overview"},{"location":"README-repo/#installation","text":"","title":"Installation"},{"location":"README-repo/#getting-started","text":"","title":"Getting Started"},{"location":"README-repo/#configuration","text":"","title":"Configuration"},{"location":"README-repo/#deployment","text":"","title":"Deployment"},{"location":"README-repo/#documentation-and-additional-resources","text":"","title":"Documentation and Additional Resources"},{"location":"README-repo/#links","text":"","title":"Links"},{"location":"README-repo/#other-docs","text":"","title":"Other Docs"},{"location":"README-repo/#history","text":"","title":"History"},{"location":"README-repo/#alternatives","text":"","title":"Alternatives"},{"location":"README-repo/#development","text":"","title":"Development"},{"location":"README-repo/#setup","text":"","title":"Setup"},{"location":"README-repo/#tests","text":"","title":"Tests"},{"location":"README-repo/#build-troubleshooting","text":"","title":"Build Troubleshooting"},{"location":"README-repo/#contributing","text":"","title":"Contributing"},{"location":"README-repo/#license","text":"","title":"License"},{"location":"cmd/_version/","text":"version Get version Synopsis Get the current version of tool version [flags] Options -h, --help help for version Options inherited from parent commands --color enable colorized output (default true) --debug log additional information about what the tool is doing. Overrides --loglevel -L, --loglevel string set zerolog log level (default \"info\") --profiledir string directory to write pprof profile data to SEE ALSO - Short desc Auto generated by spf13/cobra on 5-Aug-2025","title":" version"},{"location":"cmd/_version/#version","text":"Get version","title":"version"},{"location":"cmd/_version/#synopsis","text":"Get the current version of tool version [flags]","title":"Synopsis"},{"location":"cmd/_version/#options","text":"-h, --help help for version","title":"Options"},{"location":"cmd/_version/#options-inherited-from-parent-commands","text":"--color enable colorized output (default true) --debug log additional information about what the tool is doing. Overrides --loglevel -L, --loglevel string set zerolog log level (default \"info\") --profiledir string directory to write pprof profile data to","title":"Options inherited from parent commands"},{"location":"cmd/_version/#see-also","text":"- Short desc","title":"SEE ALSO"},{"location":"cmd/_version/#auto-generated-by-spf13cobra-on-5-aug-2025","text":"","title":"Auto generated by spf13/cobra on 5-Aug-2025"},{"location":"godoc/tool-cmd/","text":"cmd import \"github.com/b13rg/template-golang/cmd\" Index Variables func Colorize(input interface{}, colorNum int, disabled bool) string func ConfigureLogger(debug bool) func Execute(ver string) func InitConfig() func ProfilingFinalizer() func ProfilingInitializer() func SetupLogger(enableColor bool) zerolog.Logger type CmdRootOptions type Stamp Variables RootCmd represents the base command when called without any subcommands. var RootCmd = &cobra.Command{ Use: \"\", Short: \"Short desc\", Long: `Long description`, } Print out versions of packages in use. Chore() - Updated manually. var VersionCmd = &cobra.Command{ Use: \"version\", Short: \"Get version\", Long: `Get the current version of tool`, Run: func(cmd *cobra.Command, args []string) { fmt.Println(RootCmd.Use + \"+ Version: \" + version) info, ok := debug.ReadBuildInfo() if !ok { log.Fatal().Msg(\"could not read build info\") } stamp := retrieveStamp(info) fmt.Printf(\" Built with %s on %s\\n\", stamp.InfoGoCompiler, stamp.InfoBuildTime) fmt.Printf(\" VCS revision: %s\\n\", stamp.VCSRevision) fmt.Printf(\" Go version %s, GOOS %s, GOARCH %s\\n\", info.GoVersion, stamp.InfoGOOS, stamp.InfoGOARCH) fmt.Print(\" Dependencies:\\n\") for _, mod := range retrieveDepends(info) { fmt.Printf(\" %s\\n\", mod) } }, } func Colorize func Colorize(input interface{}, colorNum int, disabled bool) string Colorize function from zerolog console.go file to replicate their coloring functionality. Source: https://github.com/rs/zerolog/blob/a21d6107dcda23e36bc5cfd00ce8fdbe8f3ddc23/console.go#L389 Replicated here because it's a private function. func ConfigureLogger func ConfigureLogger(debug bool) func Execute func Execute(ver string) Execute adds all child commands to the root command sets flags appropriately. This is called by main.main(). It only needs to happen once to the rootCmd. func InitConfig func InitConfig() InitConfig reads in config file and ENV variables if set. func ProfilingFinalizer func ProfilingFinalizer() Stop profiling and write cpu and memory profiling files if configured. func ProfilingInitializer func ProfilingInitializer() Sets up program profiling. func SetupLogger func SetupLogger(enableColor bool) zerolog.Logger Configure zerolog with some defaults and cleanup error formatting. type CmdRootOptions Default options that are available to all commands. type CmdRootOptions struct { // log more information about what the tool is doing. Overrides --loglevel Debug bool // set log level LogLevel string // enable colorized output (default true). Set to false to disable\") Color bool // Profiling output directory. Only captured if set. ProfilingDir string // CPU profiling output file handle. ProfilingCPUFile *os.File } var RootConfig CmdRootOptions type Stamp type Stamp struct { InfoGoVersion string InfoGoCompiler string InfoGOARCH string InfoGOOS string InfoBuildTime string VCSRevision string }","title":"cmd"},{"location":"godoc/tool-cmd/#cmd","text":"import \"github.com/b13rg/template-golang/cmd\"","title":"cmd"},{"location":"godoc/tool-cmd/#index","text":"Variables func Colorize(input interface{}, colorNum int, disabled bool) string func ConfigureLogger(debug bool) func Execute(ver string) func InitConfig() func ProfilingFinalizer() func ProfilingInitializer() func SetupLogger(enableColor bool) zerolog.Logger type CmdRootOptions type Stamp","title":"Index"},{"location":"godoc/tool-cmd/#variables","text":"RootCmd represents the base command when called without any subcommands. var RootCmd = &cobra.Command{ Use: \"\", Short: \"Short desc\", Long: `Long description`, } Print out versions of packages in use. Chore() - Updated manually. var VersionCmd = &cobra.Command{ Use: \"version\", Short: \"Get version\", Long: `Get the current version of tool`, Run: func(cmd *cobra.Command, args []string) { fmt.Println(RootCmd.Use + \"+ Version: \" + version) info, ok := debug.ReadBuildInfo() if !ok { log.Fatal().Msg(\"could not read build info\") } stamp := retrieveStamp(info) fmt.Printf(\" Built with %s on %s\\n\", stamp.InfoGoCompiler, stamp.InfoBuildTime) fmt.Printf(\" VCS revision: %s\\n\", stamp.VCSRevision) fmt.Printf(\" Go version %s, GOOS %s, GOARCH %s\\n\", info.GoVersion, stamp.InfoGOOS, stamp.InfoGOARCH) fmt.Print(\" Dependencies:\\n\") for _, mod := range retrieveDepends(info) { fmt.Printf(\" %s\\n\", mod) } }, }","title":"Variables"},{"location":"godoc/tool-cmd/#func-colorize","text":"func Colorize(input interface{}, colorNum int, disabled bool) string Colorize function from zerolog console.go file to replicate their coloring functionality. Source: https://github.com/rs/zerolog/blob/a21d6107dcda23e36bc5cfd00ce8fdbe8f3ddc23/console.go#L389 Replicated here because it's a private function.","title":"func Colorize"},{"location":"godoc/tool-cmd/#func-configurelogger","text":"func ConfigureLogger(debug bool)","title":"func ConfigureLogger"},{"location":"godoc/tool-cmd/#func-execute","text":"func Execute(ver string) Execute adds all child commands to the root command sets flags appropriately. This is called by main.main(). It only needs to happen once to the rootCmd.","title":"func Execute"},{"location":"godoc/tool-cmd/#func-initconfig","text":"func InitConfig() InitConfig reads in config file and ENV variables if set.","title":"func InitConfig"},{"location":"godoc/tool-cmd/#func-profilingfinalizer","text":"func ProfilingFinalizer() Stop profiling and write cpu and memory profiling files if configured.","title":"func ProfilingFinalizer"},{"location":"godoc/tool-cmd/#func-profilinginitializer","text":"func ProfilingInitializer() Sets up program profiling.","title":"func ProfilingInitializer"},{"location":"godoc/tool-cmd/#func-setuplogger","text":"func SetupLogger(enableColor bool) zerolog.Logger Configure zerolog with some defaults and cleanup error formatting.","title":"func SetupLogger"},{"location":"godoc/tool-cmd/#type-cmdrootoptions","text":"Default options that are available to all commands. type CmdRootOptions struct { // log more information about what the tool is doing. Overrides --loglevel Debug bool // set log level LogLevel string // enable colorized output (default true). Set to false to disable\") Color bool // Profiling output directory. Only captured if set. ProfilingDir string // CPU profiling output file handle. ProfilingCPUFile *os.File } var RootConfig CmdRootOptions","title":"type CmdRootOptions"},{"location":"godoc/tool-cmd/#type-stamp","text":"type Stamp struct { InfoGoVersion string InfoGoCompiler string InfoGOARCH string InfoGOOS string InfoBuildTime string VCSRevision string }","title":"type Stamp"},{"location":"godoc/types/","text":"types import \"github.com/b13rg/template-golang/pkg/types\" Place external shared types here. Index","title":"types"},{"location":"godoc/types/#types","text":"import \"github.com/b13rg/template-golang/pkg/types\" Place external shared types here.","title":"types"},{"location":"godoc/types/#index","text":"","title":"Index"}]}